name: Test
on:
- push
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
defaults:
  run:
    shell: bash
jobs:
  build-old-class-dump:
    runs-on: macOS-12
    env:
      DEVELOPER_DIR: '/Applications/Xcode_13.4.1.app/Contents/Developer'
    steps:
    - uses: actions/cache@v3
      id: cache-old-class-dump
      with:
        path: old/build/Debug
        key: ${{ runner.os }}-${{ runner.arch }}-${{ env.DEVELOPER_DIR }}-class-dump
    - name: Install Homebrew dependencies
      if: steps.cache-old-class-dump.outputs.cache-hit != 'true'
      run: brew install openssl
    - uses: actions/checkout@v3
      if: steps.cache-old-class-dump.outputs.cache-hit != 'true'
      with:
        ref: '3.5'
        path: old
    - name: Build
      if: steps.cache-old-class-dump.outputs.cache-hit != 'true'
      run: |
        xcodebuild build \
          -project old/class-dump.xcodeproj \
          -target class-dump \
          -configuration Debug \
          OTHER_CFLAGS='-I/usr/local/opt/openssl@3/include -Wno-unknown-warning-option' \
          OTHER_LDFLAGS=-L/usr/local/opt/openssl@3/lib \
          DISABLE_MANUAL_TARGET_ORDER_BUILD_WARNING=1 \
          ARCHS=x86_64 \
          | xcpretty
    - uses: actions/upload-artifact@v3
      with:
        name: old-class-dump
        path: old/build/Debug/class-dump
  test:
    runs-on: ${{ matrix.macos }}
    needs: build-old-class-dump
    strategy:
      fail-fast: false
      matrix:
        include:
        - macos: macOS-13
          xcode: '14.3'
        - macos: macOS-12
          xcode: '14.2'
        - macos: macOS-12
          xcode: '14.1'
        - macos: macOS-12
          xcode: '14.0.1'
        - macos: macOS-12
          xcode: '13.4.1'
    env:
      DEVELOPER_DIR: "/Applications/Xcode_${{ matrix.xcode }}.app/Contents/Developer"
    steps:
    - uses: actions/checkout@v3
    - name: Install cc-test-reporter
      run: |
        curl -Lo cc-test-reporter https://codeclimate.com/downloads/test-reporter/test-reporter-latest-darwin-amd64
        chmod +x cc-test-reporter
    - run: ./cc-test-reporter before-build
      env:
        CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
    - name: Build all
      run: |
        xcodebuild build \
          -project class-dump.xcodeproj \
          -target all \
          -configuration Debug \
          -arch x86_64 \
          | xcpretty
    - name: Build UnitTests
      run: |
        xcodebuild build-for-testing \
          -project class-dump.xcodeproj \
          -scheme MachObjC \
          -configuration Debug \
          -arch x86_64 \
          | xcpretty
    - name: Run UnitTests
      run: |
        xcodebuild test-without-building \
          -project class-dump.xcodeproj \
          -scheme MachObjC \
          -configuration Debug \
          -resultBundlePath ./UnitTests.xcresult
    - uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: UnitTests-xcode-${{ matrix.xcode }}.xcresult
        path: UnitTests.xcresult/*
    - name: Format coverage
      run: |
        xcrun xccov view --report --json UnitTests.xcresult > coverage.json
        ./cc-test-reporter format-coverage --input-type xccov --output 'code-climate-xcode-${{ matrix.xcode }}.json' coverage.json
    - uses: actions/upload-artifact@v3
      with:
        name: coverages
        path: code-climate-xcode-${{ matrix.xcode }}.json
    - uses: actions/setup-python@v4
      with:
        python-version: '2.7'
    - uses: actions/download-artifact@v3
      with:
        name: old-class-dump
        path: old/build/Debug
    - name: Restore file permissions
      run: chmod +x old/build/Debug/class-dump
    - name: Run Tests
      run: python Tests/doTests.py
      env:
        OLD_CD: old/build/Debug/class-dump
        NEW_CD: build/Debug/class-dump
        ARCH_CD: build/Debug/class-dump
        DIFF: diff -ru
  upload-coverage:
    runs-on: ubuntu-20.04
    needs: test
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: coverages
    - name: Install cc-test-reporter
      run: |
        curl -Lo cc-test-reporter https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64
        chmod +x cc-test-reporter
    - name: Upload coverage
      run: ./cc-test-reporter sum-coverage --output - code-climate-*.json | ./cc-test-reporter upload-coverage --debug --input -
      env:
        CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
  status-check:
    runs-on: ubuntu-20.04
    needs: test
    if: failure()
    steps:
    - run: exit 1
